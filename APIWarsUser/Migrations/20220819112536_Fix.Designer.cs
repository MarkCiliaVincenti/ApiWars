// <auto-generated />
using System;
using APIWarsUser.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIWarsUser.Migrations
{
    [DbContext(typeof(SpaceGameWorldContext))]
    [Migration("20220819112536_Fix")]
    partial class Fix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("APIWarsUser.Models.Account", b =>
                {
                    b.Property<string>("Login")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Login")
                        .HasName("PK_Account_1");

                    b.HasIndex("RoleName");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("APIWarsUser.Models.DeveloperInTeam", b =>
                {
                    b.Property<string>("LoginUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TeamName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TimeSpanTokenEnd")
                        .HasColumnType("int");

                    b.Property<string>("TokenTeam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginUser", "TeamName");

                    b.HasIndex("Role");

                    b.HasIndex("TeamName");

                    b.ToTable("DeveloperInTeam", (string)null);
                });

            modelBuilder.Entity("APIWarsUser.Models.DisasterWorld", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name")
                        .HasName("PK_Disaster");

                    b.ToTable("DisasterWorld", (string)null);
                });

            modelBuilder.Entity("APIWarsUser.Models.Drone", b =>
                {
                    b.Property<string>("ShortName")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TypeDrone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ShortName");

                    b.HasIndex("TypeDrone");

                    b.ToTable("Drone", (string)null);
                });

            modelBuilder.Entity("APIWarsUser.Models.EfficiencyAction", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValueAction")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Name")
                        .HasName("PK_DroneFeature_1");

                    b.ToTable("EfficiencyAction", (string)null);
                });

            modelBuilder.Entity("APIWarsUser.Models.EventNew", b =>
                {
                    b.Property<string>("CodeNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DisasterWorldName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CodeNumber")
                        .HasName("PK_Event");

                    b.HasIndex("DisasterWorldName");

                    b.ToTable("EventNew", (string)null);
                });

            modelBuilder.Entity("APIWarsUser.Models.GameObject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("HeatPoint")
                        .HasColumnType("int");

                    b.Property<string>("Ipv6")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IPv6");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StateObject")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TypeObject")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("StateObject");

                    b.HasIndex("TypeObject");

                    b.ToTable("GameObject", (string)null);
                });

            modelBuilder.Entity("APIWarsUser.Models.InformationDrone", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("DroneNameUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DroneShortName")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.Property<string>("Ipv6")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IPv6");

                    b.Property<string>("LoginUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("X")
                        .HasColumnType("bigint");

                    b.Property<long>("Y")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DroneShortName");

                    b.HasIndex("LoginUser");

                    b.ToTable("InformationDrone", (string)null);
                });

            modelBuilder.Entity("APIWarsUser.Models.NetScan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("EventNewCodeNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("GameObjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("PlanetName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("X")
                        .HasColumnType("bigint");

                    b.Property<long>("Y")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EventNewCodeNumber");

                    b.HasIndex("GameObjectId");

                    b.HasIndex("PlanetName");

                    b.ToTable("NetScan", (string)null);
                });

            modelBuilder.Entity("APIWarsUser.Models.ObjectAvailable", b =>
                {
                    b.Property<string>("LoginUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("ServerId")
                        .HasColumnType("bigint");

                    b.Property<int>("ServerLevel")
                        .HasColumnType("int");

                    b.HasIndex("LoginUser");

                    b.HasIndex("ServerId");

                    b.ToTable("ObjectAvailable", (string)null);
                });

            modelBuilder.Entity("APIWarsUser.Models.Planet", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<int>("Latitude")
                        .HasColumnType("int");

                    b.Property<int>("Longitude")
                        .HasColumnType("int");

                    b.Property<string>("Square")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Name");

                    b.ToTable("Planet", (string)null);
                });

            modelBuilder.Entity("APIWarsUser.Models.Role", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.HasKey("Name");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("APIWarsUser.Models.RoleInTeam", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Name");

                    b.ToTable("RoleInTeam", (string)null);
                });

            modelBuilder.Entity("APIWarsUser.Models.StateGameObject", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SymbolState")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.HasKey("Name")
                        .HasName("PK_StateServer");

                    b.ToTable("StateGameObject", (string)null);
                });

            modelBuilder.Entity("APIWarsUser.Models.Statistic", b =>
                {
                    b.Property<int>("Cec")
                        .HasColumnType("int")
                        .HasColumnName("CEC");

                    b.Property<int>("Cem")
                        .HasColumnType("int")
                        .HasColumnName("CEM");

                    b.Property<int>("Idle")
                        .HasColumnType("int")
                        .HasColumnName("IDLE");

                    b.Property<string>("LoginUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Sac")
                        .HasColumnType("int")
                        .HasColumnName("SAC");

                    b.Property<int>("Slm")
                        .HasColumnType("int")
                        .HasColumnName("SLM");

                    b.HasIndex("LoginUser");

                    b.ToTable("Statistic", (string)null);
                });

            modelBuilder.Entity("APIWarsUser.Models.Team", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Name");

                    b.ToTable("Team", (string)null);
                });

            modelBuilder.Entity("APIWarsUser.Models.TypeDrone", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EfficiencyDrone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("HeatPoint")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("MoveAction")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Name");

                    b.HasIndex("EfficiencyDrone");

                    b.ToTable("TypeDrone", (string)null);
                });

            modelBuilder.Entity("APIWarsUser.Models.TypeGameObject", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("UnicEfficensyId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Name");

                    b.HasIndex("UnicEfficensyId");

                    b.ToTable("TypeGameObject", (string)null);
                });

            modelBuilder.Entity("APIWarsUser.Models.UnicEfficensy", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("ValueAction")
                        .HasColumnType("float");

                    b.HasKey("Name");

                    b.ToTable("UnicEfficensy", (string)null);
                });

            modelBuilder.Entity("APIWarsUser.Models.Account", b =>
                {
                    b.HasOne("APIWarsUser.Models.Role", "RoleNameNavigation")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleName")
                        .IsRequired()
                        .HasConstraintName("FK_Account_Role");

                    b.Navigation("RoleNameNavigation");
                });

            modelBuilder.Entity("APIWarsUser.Models.DeveloperInTeam", b =>
                {
                    b.HasOne("APIWarsUser.Models.Account", "LoginUserNavigation")
                        .WithMany("DeveloperInTeams")
                        .HasForeignKey("LoginUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DeveloperInTeam_Account");

                    b.HasOne("APIWarsUser.Models.RoleInTeam", "RoleNavigation")
                        .WithMany("DeveloperInTeams")
                        .HasForeignKey("Role")
                        .IsRequired()
                        .HasConstraintName("FK_DeveloperInTeam_RoleInTeam");

                    b.HasOne("APIWarsUser.Models.Team", "TeamNameNavigation")
                        .WithMany("DeveloperInTeams")
                        .HasForeignKey("TeamName")
                        .IsRequired()
                        .HasConstraintName("FK_DeveloperInTeam_Team");

                    b.Navigation("LoginUserNavigation");

                    b.Navigation("RoleNavigation");

                    b.Navigation("TeamNameNavigation");
                });

            modelBuilder.Entity("APIWarsUser.Models.Drone", b =>
                {
                    b.HasOne("APIWarsUser.Models.TypeDrone", "TypeDroneNavigation")
                        .WithMany("Drones")
                        .HasForeignKey("TypeDrone")
                        .IsRequired()
                        .HasConstraintName("FK_Drone_TypeDrone1");

                    b.Navigation("TypeDroneNavigation");
                });

            modelBuilder.Entity("APIWarsUser.Models.EventNew", b =>
                {
                    b.HasOne("APIWarsUser.Models.DisasterWorld", "DisasterWorldNameNavigation")
                        .WithMany("EventNews")
                        .HasForeignKey("DisasterWorldName")
                        .HasConstraintName("FK_Event_Disaster");

                    b.Navigation("DisasterWorldNameNavigation");
                });

            modelBuilder.Entity("APIWarsUser.Models.GameObject", b =>
                {
                    b.HasOne("APIWarsUser.Models.StateGameObject", "StateObjectNavigation")
                        .WithMany("GameObjects")
                        .HasForeignKey("StateObject")
                        .IsRequired()
                        .HasConstraintName("FK_GameObject_StateGameObject");

                    b.HasOne("APIWarsUser.Models.TypeGameObject", "TypeObjectNavigation")
                        .WithMany("GameObjects")
                        .HasForeignKey("TypeObject")
                        .IsRequired()
                        .HasConstraintName("FK_GameObject_TypeGameObject1");

                    b.Navigation("StateObjectNavigation");

                    b.Navigation("TypeObjectNavigation");
                });

            modelBuilder.Entity("APIWarsUser.Models.InformationDrone", b =>
                {
                    b.HasOne("APIWarsUser.Models.Drone", "DroneShortNameNavigation")
                        .WithMany("InformationDrones")
                        .HasForeignKey("DroneShortName")
                        .IsRequired()
                        .HasConstraintName("FK_InformationDrone_Drone");

                    b.HasOne("APIWarsUser.Models.Account", "LoginUserNavigation")
                        .WithMany("InformationDrones")
                        .HasForeignKey("LoginUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_InformationDrone_Account");

                    b.Navigation("DroneShortNameNavigation");

                    b.Navigation("LoginUserNavigation");
                });

            modelBuilder.Entity("APIWarsUser.Models.NetScan", b =>
                {
                    b.HasOne("APIWarsUser.Models.EventNew", "EventNewCodeNumberNavigation")
                        .WithMany("NetScans")
                        .HasForeignKey("EventNewCodeNumber")
                        .IsRequired()
                        .HasConstraintName("FK_NetScan_Event");

                    b.HasOne("APIWarsUser.Models.GameObject", "GameObject")
                        .WithMany("NetScans")
                        .HasForeignKey("GameObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_NetScan_GameObject");

                    b.HasOne("APIWarsUser.Models.Planet", "PlanetNameNavigation")
                        .WithMany("NetScans")
                        .HasForeignKey("PlanetName")
                        .IsRequired()
                        .HasConstraintName("FK_NetScan_Planet");

                    b.Navigation("EventNewCodeNumberNavigation");

                    b.Navigation("GameObject");

                    b.Navigation("PlanetNameNavigation");
                });

            modelBuilder.Entity("APIWarsUser.Models.ObjectAvailable", b =>
                {
                    b.HasOne("APIWarsUser.Models.Account", "LoginUserNavigation")
                        .WithMany()
                        .HasForeignKey("LoginUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_ObjectAvailable_Account");

                    b.HasOne("APIWarsUser.Models.GameObject", "Server")
                        .WithMany()
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ObjectAvailable_GameObject");

                    b.Navigation("LoginUserNavigation");

                    b.Navigation("Server");
                });

            modelBuilder.Entity("APIWarsUser.Models.Statistic", b =>
                {
                    b.HasOne("APIWarsUser.Models.Account", "LoginUserNavigation")
                        .WithMany()
                        .HasForeignKey("LoginUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Statistic_Account");

                    b.Navigation("LoginUserNavigation");
                });

            modelBuilder.Entity("APIWarsUser.Models.TypeDrone", b =>
                {
                    b.HasOne("APIWarsUser.Models.EfficiencyAction", "EfficiencyDroneNavigation")
                        .WithMany("TypeDrones")
                        .HasForeignKey("EfficiencyDrone")
                        .IsRequired()
                        .HasConstraintName("FK_TypeDrone_DroneFeature1");

                    b.Navigation("EfficiencyDroneNavigation");
                });

            modelBuilder.Entity("APIWarsUser.Models.TypeGameObject", b =>
                {
                    b.HasOne("APIWarsUser.Models.UnicEfficensy", "UnicEfficensy")
                        .WithMany("TypeGameObjects")
                        .HasForeignKey("UnicEfficensyId")
                        .IsRequired()
                        .HasConstraintName("FK_TypeGameObject_UnicEfficensy");

                    b.Navigation("UnicEfficensy");
                });

            modelBuilder.Entity("APIWarsUser.Models.Account", b =>
                {
                    b.Navigation("DeveloperInTeams");

                    b.Navigation("InformationDrones");
                });

            modelBuilder.Entity("APIWarsUser.Models.DisasterWorld", b =>
                {
                    b.Navigation("EventNews");
                });

            modelBuilder.Entity("APIWarsUser.Models.Drone", b =>
                {
                    b.Navigation("InformationDrones");
                });

            modelBuilder.Entity("APIWarsUser.Models.EfficiencyAction", b =>
                {
                    b.Navigation("TypeDrones");
                });

            modelBuilder.Entity("APIWarsUser.Models.EventNew", b =>
                {
                    b.Navigation("NetScans");
                });

            modelBuilder.Entity("APIWarsUser.Models.GameObject", b =>
                {
                    b.Navigation("NetScans");
                });

            modelBuilder.Entity("APIWarsUser.Models.Planet", b =>
                {
                    b.Navigation("NetScans");
                });

            modelBuilder.Entity("APIWarsUser.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("APIWarsUser.Models.RoleInTeam", b =>
                {
                    b.Navigation("DeveloperInTeams");
                });

            modelBuilder.Entity("APIWarsUser.Models.StateGameObject", b =>
                {
                    b.Navigation("GameObjects");
                });

            modelBuilder.Entity("APIWarsUser.Models.Team", b =>
                {
                    b.Navigation("DeveloperInTeams");
                });

            modelBuilder.Entity("APIWarsUser.Models.TypeDrone", b =>
                {
                    b.Navigation("Drones");
                });

            modelBuilder.Entity("APIWarsUser.Models.TypeGameObject", b =>
                {
                    b.Navigation("GameObjects");
                });

            modelBuilder.Entity("APIWarsUser.Models.UnicEfficensy", b =>
                {
                    b.Navigation("TypeGameObjects");
                });
#pragma warning restore 612, 618
        }
    }
}
